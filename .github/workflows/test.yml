name: Go Unit Tests

# Trigger the workflow on push and pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: Setup Go environment
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.3'  # Specify your Go version
    
    # Step 3: Cache Go modules for faster builds
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('services/bounty-service/go.sum', 'services/bounty-service/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    # Step 4: Download dependencies
    - name: Download dependencies
      run: go mod download
    
    # Step 5: Run tests
    - name: Run tests
      run: |
        #!/bin/bash
        for dir in ./services/*; do
          echo "Running tests in $dir"
          go test -v $dir/...
        done
    
    # Step 6: Run tests with coverage
    - name: Run tests with coverage
      run: |
        #!/bin/bash
        for dir in ./services/*; do
          echo "Running tests with coverage in $dir"
          go test -v -coverprofile=coverage.out $dir/...
        done
    
    # Step 7: Upload coverage to Codecov (optional)
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=5m
